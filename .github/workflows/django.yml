name: Django CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  ci:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgres://danielpro:danielpro@localhost:5432/danielpro
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: danielpro
          POSTGRES_USER: danielpro
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        cd fly_project
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Setup .env
      run: 
        cp .env.example .env
    - name: Running Tests
      run: |
        cd fly_project
        pytest test_django.py
  deploy:
    name: Deploy app
    runs-on: ubuntu-latest
    needs: ci
    env:
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
    steps:
    - uses: actions/checkout@v3
    - uses: superfly/flyctl-actions/setup-flyctl@master
    - name: running deploy
      run: |
        cd fly_project
        flyctl deploy --remote-only


    



